Index: app/src/main/java/brown/jeff/cocktailapp/presentation/popular/PopularDrinksFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package brown.jeff.cocktailapp.presentation.popular\r\n\r\nimport android.os.Bundle\r\nimport android.view.*\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.appcompat.widget.Toolbar\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.Observer\r\nimport androidx.navigation.fragment.findNavController\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout\r\nimport brown.jeff.cocktailapp.R\r\nimport brown.jeff.cocktailapp.presentation.adapter.DrinkAdapter\r\nimport brown.jeff.cocktailapp.util.changeRecyclerViewLayout\r\nimport kotlinx.android.synthetic.main.fragment_popular.*\r\nimport org.koin.androidx.viewmodel.ext.android.viewModel\r\n\r\nclass PopularDrinksFragment : Fragment() {\r\n\r\n    private val popularDrinksViewModel: PopularDrinksViewModel by viewModel()\r\n    private lateinit var popularDrinkAdapter: DrinkAdapter\r\n    private lateinit var toolbar: Toolbar\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        setHasOptionsMenu(true)\r\n        super.onCreate(savedInstanceState)\r\n        popularDrinksViewModel.getAllPopularDrinks()\r\n\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {\r\n        super.onCreateOptionsMenu(menu, inflater)\r\n        inflater.inflate(R.menu.settings_menu, menu)\r\n\r\n\r\n    }\r\n\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        return when (item.itemId) {\r\n            R.id.setting_menuitem -> {\r\n                changeToSettingsScreen()\r\n                true\r\n            }\r\n\r\n            else -> super.onOptionsItemSelected(item)\r\n        }\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        val view = inflater.inflate(R.layout.fragment_popular, container, false)\r\n        toolbar = view.findViewById(R.id.popular_toolbar)\r\n\r\n        swipeToRefresh(view)\r\n        //sets the toolbar in the fragment\r\n        val toolbar = view?.findViewById<Toolbar>(R.id.popular_toolbar)\r\n        (activity as AppCompatActivity).setSupportActionBar(toolbar)\r\n        return view\r\n    }\r\n\r\n    override fun onActivityCreated(savedInstanceState: Bundle?) {\r\n        super.onActivityCreated(savedInstanceState)\r\n        popularDrinkAdapter = DrinkAdapter(\r\n            emptyList()\r\n        ) { id : String -> handleScreenChange(id) }\r\n\r\n        recyclerview_popular.apply {\r\n            adapter = popularDrinkAdapter\r\n            setHasFixedSize(true)\r\n            activity?.let { changeRecyclerViewLayout(context, it, this) }\r\n\r\n        }\r\n\r\n        popularDrinksViewModel.popularDrinks.observe(viewLifecycleOwner, Observer {\r\n            popularDrinkAdapter.updateDrinkList(it)\r\n\r\n        })\r\n\r\n        displayErrorMessage()\r\n\r\n\r\n    }\r\n\r\n    //swipe to refresh pulls new data\r\n\r\n    private fun swipeToRefresh(view: View) {\r\n        val swipeRefreshLayout = view.findViewById<SwipeRefreshLayout>(R.id.swiperefresh_popular)\r\n        swipeRefreshLayout.setOnRefreshListener {\r\n            popularDrinksViewModel.getAllPopularDrinks()\r\n            swipeRefreshLayout.isRefreshing = false\r\n        }\r\n    }\r\n\r\n\r\n    private fun displayErrorMessage() {\r\n        popularDrinksViewModel.displayError.observe(viewLifecycleOwner, Observer {\r\n            if (it != null) {\r\n                recyclerview_popular.visibility = View.GONE\r\n                popular_errortextview.visibility = View.VISIBLE\r\n                popular_errortextview.text = it\r\n            } else {\r\n                recyclerview_popular.visibility = View.VISIBLE\r\n                popular_errortextview.visibility = View.GONE\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    private fun handleScreenChange(id: String) {\r\n        val action =\r\n            PopularDrinksFragmentDirections.popularToDrinkclicked(id)\r\n        findNavController().navigate(action)\r\n\r\n    }\r\n\r\n    private fun changeToSettingsScreen() {\r\n        val action = PopularDrinksFragmentDirections.popularToSettings()\r\n        findNavController().navigate(action)\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/brown/jeff/cocktailapp/presentation/popular/PopularDrinksFragment.kt	(revision fea59f54d37fb90e91b1f91736aaa43acf5d5916)
+++ app/src/main/java/brown/jeff/cocktailapp/presentation/popular/PopularDrinksFragment.kt	(date 1608070870381)
@@ -23,7 +23,6 @@
     override fun onCreate(savedInstanceState: Bundle?) {
         setHasOptionsMenu(true)
         super.onCreate(savedInstanceState)
-        popularDrinksViewModel.getAllPopularDrinks()
 
     }
 
@@ -61,11 +60,11 @@
         return view
     }
 
-    override fun onActivityCreated(savedInstanceState: Bundle?) {
-        super.onActivityCreated(savedInstanceState)
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
         popularDrinkAdapter = DrinkAdapter(
             emptyList()
-        ) { id : String -> handleScreenChange(id) }
+        ) { id: String -> handleScreenChange(id) }
 
         recyclerview_popular.apply {
             adapter = popularDrinkAdapter
@@ -73,15 +72,14 @@
             activity?.let { changeRecyclerViewLayout(context, it, this) }
 
         }
-
+        popularDrinksViewModel.getAllPopularDrinks()
         popularDrinksViewModel.popularDrinks.observe(viewLifecycleOwner, Observer {
-            popularDrinkAdapter.updateDrinkList(it)
-
+            if (it != null) {
+                popularDrinkAdapter.updateDrinkList(it)
+            }
         })
 
         displayErrorMessage()
-
-
     }
 
     //swipe to refresh pulls new data
